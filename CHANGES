2.0.0   2013-01-25

    [ FEATURE ]
    * Module is now compatible with Dancer 1 and Dancer 2
    * Improved support for bcrypt using the new Digest::Bcrypt module
    * Added support for $2x$ and $2y$ variants of bcrypt
    * Added 'algorithm' method, for finding out exactly which module generated your hash
    * Now croaks when non RFC2307 string string is passed to the matches method
    * Made method names more consistent. raw_hash and raw_salt now become hash_raw and salt_raw
      The old methods are deprecated, but remain for backwards compatibility.

    [ MISC ]
    * Large code refactor to ease future maintenance
    * Removed deprecated true_random_salt setting
    * Deprecated as_rfc2307 and generate_hash methods

    [ BUGFIX ]
    * Fix issue where the hash_hex, hash_base64, and raw_hash methods
      return incorrect values when working on bcrypt hashes.
    * Fix issues with utf8 encoding and SHA hashes, caused by changes in Digest::SHA
    * Fix stringification issues when comparing passphrase objects with 'ne'
        (Dave Cross)

    [ DOCUMENTATION ]
    * Use Pod::Coverage to make sure all methods are documented fully
    * Added better documentation for best-practice when matching legacy hashes

    [ TESTS ]
    * Added Tests for defined but false salts
    * Added Tests for checking deprecated methods still work
    * Added Tests for checking hashes generated by other modules and other languages
    * More thoroughly test methods for extracting the salt/hash from an RFC2307 string
    * Module is now tested by Travis CI


1.0.1   2012-03-30

    [ DOCUMENTATION ]
    * GH #1: Clarified documentation detailing what part of the object to store
    * Added section with default lengths of RFC 2307 strings

    [ BUGFIX ]
    * GH #2: Improved error handling when trying to use the matches() method
      without providing a valid RFC 2307 string


1.0.0   2011-12-01

    [ FEATURE ]
    * Use overload to auto stringify the object to the rfc2307 representation
      This removes the need for the ugly { return_object => 1 } argument
      The { return_object => 1 } syntax is removed with immediate effect
      If you used the { return_object => 1 } syntax, it will no longer work.

      This is a backwards incompatible change.


0.1.1   2011-10-18

    [ BUGFIX ]
    * Made compatible with perl < 5.14


0.1.0   2011-09-26

    ** First Public Release **

    [ DOCUMENTATION ]
    * Added Documentation

    [ TESTS ]
    * Added Test Suite


0.0.1   2011-09-06

    ** First Draft **
